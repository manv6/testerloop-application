name: Deploy
on:
  push:
    branches:
    - master
jobs:
  build:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: 'true'
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Push
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          ECR_REPOSITORY: ${{ vars.AWS_ECR_REPOSITORY }}
          REACT_APP_TESTERLOOP_API_KEY: ${{ secrets.REACT_APP_TESTERLOOP_API_KEY }}
          REACT_APP_GRAPHQL_API_URL: ${{ vars.REACT_APP_GRAPHQL_API_URL }}
          REACT_APP_COGNITO_REGION: 'eu-west-3'
          REACT_APP_PROJECT_REGION: 'eu-west-3'
          REACT_APP_OAUTH_DOMAIN: ${{ vars.REACT_APP_OAUTH_DOMAIN }}
          REACT_APP_USER_POOL_ID: ${{ vars.REACT_APP_USER_POOL_ID }}
          REACT_APP_POOL_WEB_CLIENT_ID: ${{ vars.REACT_APP_POOL_WEB_CLIENT_ID }}
          REACT_APP_IDENTITY_POOL_ID: ${{ vars.REACT_APP_IDENTITY_POOL_ID }}
          REACT_APP_GOOGLE_CLIENT_ID: ${{ vars.REACT_APP_GOOGLE_CLIENT_ID }}
          REACT_APP_REDIRECT_SIGN_IN: ${{ vars.REACT_APP_REDIRECT_SIGN_IN }}
          REACT_APP_REDIRECT_SIGN_OUT: ${{ vars.REACT_APP_REDIRECT_SIGN_OUT }}
        run: |
          sed "s/<GITHUB_TOKEN>/${NPM_TOKEN}/" <.npmrc.shadow >.npmrc
          docker buildx build --build-arg ENABLE_DB=true --build-arg REACT_APP_TESTERLOOP_API_KEY=$REACT_APP_TESTERLOOP_API_KEY --build-arg REACT_APP_GRAPHQL_API_URL=$REACT_APP_GRAPHQL_API_URL --secret id=npmrc,src=.npmrc  -t $ECR_REPOSITORY:$GITHUB_SHA --load .
          docker push $ECR_REPOSITORY:$GITHUB_SHA
          docker tag $ECR_REPOSITORY:$GITHUB_SHA $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REPOSITORY:$GITHUB_SHA"

  deploy:
    name: Deploy to ECS
    needs: build
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Deploy
        env:
          ECS_CLUSTER: ${{ vars.AWS_ECS_CLUSTER }}
          ECS_SERVICE: ${{ vars.AWS_ECS_SERVICE }}
        run: |
          aws ecs update-service --cluster=$ECS_CLUSTER --service=$ECS_SERVICE --force-new-deployment
