name: Build & Publish Testerloop App NPM Package (w/ Github Release)

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  publish-gpr:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout Repository with Submodules
        uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Login to GitHub Package Registry
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          ECR_REPOSITORY: ${{ vars.AWS_ECR_REPOSITORY }}
        run: sed "s/<GITHUB_TOKEN>/${NPM_TOKEN}/" <.npmrc.shadow >.npmrc
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: https://npm.pkg.github.com/
      - run: |
          npm run init
          npm run build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Get latest release
        id: release
        uses: actions/github-script@v4
        with:
          script: |
            const releases = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const latestRelease = releases.data[0];
            console.log(latestRelease.tag_name);
            core.setOutput('tag_name', latestRelease.tag_name);

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: |
            Build & Publish Testerloop App Package
            Latest Release: *[ ${{ steps.release.outputs.tag_name }} ]* (https://github.com/${{ github.repository }}/releases/latest)
